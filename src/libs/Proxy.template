<?php
namespace doublemcz\dibiorm\proxies\##CLASS_NAMESPACE##;

use doublemcz\dibiorm\Manager;
use doublemcz\dibiorm\IProxy;

class ##CLASS_NAME## implements IProxy {
	/** @var Manager */
	private $manager;
	/** @var bool */
	private $isInitialized = FALSE;
	/** @var array */
	protected $joiningMap;
	/** @var object */
	private $class;

	/**
	 * @param Manager$manager
	 * @param object $class
	 */
	public function __construct(Manager $manager, $class)
	{
		$this->manager = $manager;
		$this->class = $class;
	}

	public function &__get($property)
	{
		if (!$this->isInitialized) {
			$this->load();
		}

		return $this->class->{$property};
	}

	public function __set($property, $value)
   {
      if (!$this->isInitialized) {
         $this->load();
      }

      parent::__set($property, $value);
   }

   private function load()
   {
      $this->initialized = true;
      $this->manager->loadProxy($this);
   }

	/**
	 * @return array
	 */
   public function getJoiningMap()
   {
      return $this->joiningMap;
   }

	/**
	 * @return object;
	 */
   public function getClassInstance()
   {
      return $this->class;
   }
}